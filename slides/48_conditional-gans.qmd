---
engine: knitr
title: "48. Conditional GANs"
---

# Learning objectives

::: nonincremental
- Introduce Conditional Generative Adversarial Networks
:::

::: notes
- You can add notes on each slide with blocks like this!
- Load a deck in the browser and type "s" to see these notes.
:::

# Conditional GANs

## cGANs

"We investigate conditional adversarial networks as a general-purpose solution to image-to-image translation problems. These networks not only learn the mapping from input image to output image, but also **learn a loss function** to train this mapping. This makes it possible to apply the same generic approach to problems that traditionally would require very different loss formulations."

* [Isola, et al.](https://phillipi.github.io/pix2pix/)

## example

![cGAN in ecology](images/cGAN_ecology.png)

* image source: [Hayatbini, et al.](https://www.mdpi.com/2072-4292/11/19/2193#)

## Activity: Pix2Pix Image-to-Image

![image-to-image](images/pix2pix_shoes.png)	

* [app (link)](https://affinelayer.com/pixsrv/) by Christopher Hesse
* [GitHub repo](https://github.com/affinelayer/pix2pix-tensorflow)

## Activity: Pix2Pix Instruct

![pix2pix](images/pix2pix.png)	

* [app (link)](https://huggingface.co/spaces/timbrooks/instruct-pix2pix) by Tim Brooks
* [GitHub repo](https://github.com/timothybrooks/instruct-pix2pix)

# Stacked GANs

## Stacked GANs

*  "Stage-I GAN sketches the primitive shape and colors of the object based on the given text description, yielding Stage-I low-resolution images"
* " Stage-II GAN takes Stage-I results and text descriptions as inputs, and generates high-resolution images with photo-realistic details"

![Zhang, et al., 2016](images/stackGAN_stages.png)

## Architecture

![Zhang, et al., 2016](images/stackGAN_architecture.png)

## Scaling

![Zhang, et al., 2016](images/stackGAN_scaling.png)

# Cycle GANs

## cGANs

* "... learning to translate an image from a source domain $X$ to a target domain $Y$ in the absence of paired examples ..." --- [Jun-Yan Zhu, et al., 2017](https://junyanz.github.io/CycleGAN/)

![cycle GAN possibilities](images/cycle_GAN_splash.png)

## Architecture

![](images/cycle_GAN_architecture_A2B.png)

## cGAN Objective

In a cyclic GAN, the generator and discriminator converge toward a Nash equilibrium.

![cycle GAN architecture](images/cycle_GAN_architecture_B2A.png)

* images source: [Bansal and Rathore](images/https://hardikbansal.github.io/CycleGANBlog/)







